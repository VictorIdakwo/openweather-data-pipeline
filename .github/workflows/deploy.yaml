name: Deploy OpenWeather Pipeline

on:
  push:
    branches:
      - main  # Trigger deployment on push to main

jobs:
  deploy_lambda:
    name: Deploy AWS Lambda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: pip install -r lambda/requirements.txt

      - name: Deploy to AWS Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-north-1"
        run: |
          zip -r lambda_function.zip lambda/
          aws lambda update-function-code \
            --function-name arn:aws:lambda:eu-north-1:775823849624:function:ingest-openweather \
            --zip-file fileb://lambda_function.zip

  deploy_databricks:
    name: Deploy Databricks Notebook
    runs-on: ubuntu-latest
    needs: deploy_lambda
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Databricks CLI
        run: pip install databricks-cli

      - name: Deploy Notebook to Databricks
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          databricks workspace import \
            --language PYTHON \
            --overwrite \
            databricks/kinesis_ingestion.py /Workspace/kinesis_ingestion.py

  deploy_dbt:
    name: Deploy DBT Models
    runs-on: ubuntu-latest
    needs: deploy_databricks
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install DBT
        run: pip install dbt

      - name: Run DBT Models
        env:
          DBT_PROFILE: ${{ secrets.DBT_PROFILE }}
        run: |
          cd dbt/
          dbt run
